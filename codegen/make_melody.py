import os
import numpy as np

header = """// --- file generated by codegen/make_melody.py ---

//  data for inventio in a minor by J.S. Bach

"""

def freq_from_note(note, key):
    return pow(2.0, note/12) * key

def step_from_freq(freq):
    sample_rate = 16129;
    return round((2**16) * freq / sample_rate)

def step_from_note(note, key):
    if note < 0:
        return 0
    else:
        return step_from_freq(freq_from_note(note, key))



inventio1 = [
    -1,  4,  9, 12, 11,  4, 11, 14, 
    12, 12, 16, 16,  8,  8, 16, 16, # Takt 1
     9,  4,  9, 12, 11,  4, 11, 14, 
    12, 12,  9,  9, -1, -1, -1, -1, # Takt 2
    -1, 16, 12, 16,  9, 12,  4,  7, 
     5,  5,  9,  9, 14, 14, 17, 17, # Takt 3
    17, 14, 11, 14,  7, 11,  2,  5, 
     4,  4,  7,  7, 12, 12, 16, 16, # Takt 4
    16, 12,  9, 12,  5,  5, 14, 14, 
    14, 11,  7, 11,  4,  4, 12, 12, # Takt 5
    12,  9,  5,  9,  2,  2, 11, 11, 
    12, 12, -1, -1, -1, -1, -1, -1, # Takt 6
    -1,  7, 12, 16, 14,  7, 14, 17, 
    16, 16, 19, 19, 11, 11, 19, 19, # Takt 7
    12,  7, 12, 16, 14,  7, 14, 17,
    16, 16, 12, 12, 19, 19, 16, 16, # Takt 8
    24, 21, 16, 21, 12, 16,  9, 12, 
    14, 14, 18, 18, 21, 21, 24, 24, # Takt 9
    23, 19, 14, 19, 11, 14,  7, 11, 
    12, 12, 16, 16, 19, 19, 23, 23, # Takt 10
    21, 18, 15, 18, 11, 15,  6,  9, 
     7,  7, 19, 19, 19, 16, 12, 16, # Takt 11
     9,  9, 18, 18, 18, 14, 11, 14, 
     7,  7, 16, 16, 16, 12,  9, 12, # Takt 12
     6, 19, 18, 16, 15, 18, 11, 15, 
    16, 16, -1, -1, -1 ,-1, -1, -1, # Takt 13
    -1, -1, -1, -1, -1, -1, -1, -1, 
    -1, -1, -1, -1, -1, -1, -1, -1  # Takt 14
]

inventio2 = [
     9,  9, 21, 21, 21, 21, 20, 20, 
    21, 16, 21, 24, 23, 16, 23, 26, # Takt 1
    24, 24, 21, 21, 20, 20, 16, 16, 
    21, 16, 21, 24, 23, 16, 23, 26, # Takt 2
    24, 24, 21, 21, 24, 24, 21, 21, 
    26, 21, 17, 21, 14, 17,  9, 12, # Takt 3
    11, 11, 14, 14, 19, 19, 23, 23, 
    23, 19, 16, 19, 12, 16, 7,  11, # Takt 4
     9,  9, 12, 12, 14, 17, 11, 14, 
     7,  7, 11, 11, 12, 16, 9,  12, # Takt 5
     5,  5,  2,  2,  7, 19, 17, 19, 
    12, 19, 24, 28, 26, 19, 26, 29, # Takt 6
    28, 28, 24, 24, 23, 23, 19, 19, 
    24, 19, 24, 28, 26, 19, 26, 29, # Takt 7
    28, 28, 24, 24, -1, -1, -1, -1,
    -1, 31, 28, 31, 24, 28, 19, 23, # Takt 8
    21, 21, 24, 24, 28, 28, 31, 31, 
    30, 33, 26, 30, 21, 26, 18, 21, # Takt 9
    19, 19, 23, 23, 26, 26, 30, 30, 
    28, 31, 24, 28, 19, 24, 16, 19, # Takt 10
    18, 18, 21, 21, 23, 23, 27, 27, 
    -1, 28, 24, 28, 21, 24, 28, 31, # Takt 11
    30, 26, 23, 26, 19, 23, 26, 30, 
    28, 24, 21, 24, 18, 21, 24, 24, # Takt 12
    24, 23, 24, 21, 23, 23, 11, 11, 
    16, 28, 23, 19, 16, 11,  7, 11, # Takt 13
     4,  4, -1, -1, -1, -1, -1, -1, 
    -1, -1, -1, -1, -1, -1, -1, -1  # Takt 14
]

key1 = 261.625 # middle c
key2 = 261.625 / 4  # double low c
steps1 = [step_from_note(note, key1) for note in inventio1]
steps2 = [step_from_note(note, key2) for note in inventio2]

filename = "tables/melody.c"
os.makedirs(os.path.dirname(filename), exist_ok=True)
with open(filename, "w") as file:
    file.write(header)
    file.write("uint16_t steps1[] = {\n    ")
    for count, value in enumerate(steps1):
        file.write("{0}".format(value).rjust(5) + ", ")
        if np.mod(count, 8) == 7:
            file.write("\n    ")

    file.write("\n};\n\n")

    file.write("uint16_t steps2[] = {\n    ")
    for count, value in enumerate(steps2):
        file.write("{0}".format(value).rjust(5) + ", ")
        if np.mod(count, 8) == 7:
            file.write("\n    ")
    file.write("\n};")

    file.write("\nint mel_length = {L};".format(L=len(steps1)))

